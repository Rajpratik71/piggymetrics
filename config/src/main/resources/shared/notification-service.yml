security:
  oauth2:
    client:
      clientId: notification-service
      clientSecret: ${NOTIFICATION_SERVICE_PASSWORD}
      accessTokenUri: http://${AUTH_HOST}:${AUTH_PORT}/uaa/oauth/token
      grant-type: client_credentials
      scope: server

server:
  servlet:
    context-path: /notifications
  port: 8000

remind:
  cron: 0 0 0 * * *
  email:
    text: "Hey, {0}! We''ve missed you here on PiggyMetrics. It''s time to check your budget statistics.\r\n\r\nCheers,\r\nPiggyMetrics team"
    subject: PiggyMetrics reminder

backup:
  cron: 0 0 12 * * *
  email:
    text: "Howdy, {0}. Your account backup is ready.\r\n\r\nCheers,\r\nPiggyMetrics team"
    subject: PiggyMetrics account backup
    attachment: backup.json

spring:
  data:
    mongodb:
      host: ${MONGO_HOST}
      username: ${MONGO_INITDB_ROOT_USERNAME}
      password: ${MONGO_INITDB_ROOT_PASSWORD}
      database: admin
      port: ${MONGO_PORT}
  mail:
    host: ${SMTP_HOST}
    port: ${SMTP_PORT}
    username: ${SMTP_USER}
    password: ${SMTP_PASS}
    properties:
      mail:
        smtp:
          auth: true
          socketFactory:
            port: ${SMTP_PORT}
            class: javax.net.ssl.SSLSocketFactory
            fallback: false
          ssl:
            enable: true
